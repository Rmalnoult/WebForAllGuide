<script setup>
import { useI18n } from 'vue-i18n'

const { t } = useI18n()
const { getPageSEO } = useSEOConfig()
const seo = getPageSEO('/keyboard-navigation')

useHead(seo)

import { ref, nextTick, computed } from 'vue'
import PageHeader from '@/components/layout/PageHeader.vue'
import ExampleToggle from '@/components/common/ExampleToggle.vue'
import { useSyntaxHighlight } from '@/composables/useSyntaxHighlight'

// Initialize syntax highlighting
useSyntaxHighlight()

// Modal states
const badModalOpen = ref(false)
const goodModalOpen = ref(false)
const goodModalTrigger = ref(null)
const goodModalCloseButton = ref(null)
const goodModalFirstInput = ref(null)
const goodModalCancelButton = ref(null)
const goodModalLastButton = ref(null)

// Menu navigation
const selectedMenuItem = ref(0)
const menuItems = computed(() => [
  `🏠 ${t('pages.keyboardNavigation.listNavigation.bad.items.home')}`,
  `📋 ${t('pages.keyboardNavigation.listNavigation.bad.items.projects')}`,
  `👥 ${t('pages.keyboardNavigation.listNavigation.bad.items.team')}`,
  `📊 ${t('pages.keyboardNavigation.listNavigation.bad.items.stats')}`,
  `⚙️ ${t('pages.keyboardNavigation.listNavigation.bad.items.settings')}`
])

// Bad modal functions
function openBadModal() {
  badModalOpen.value = true
}

function closeBadModal() {
  badModalOpen.value = false
}

function confirmBadModal() {
  alert(t('pages.keyboardNavigation.modalTrap.modal.content'))
  badModalOpen.value = false
}

// Good modal functions
async function openGoodModal() {
  goodModalOpen.value = true
  await nextTick()
  if (goodModalCloseButton.value) {
    goodModalCloseButton.value.focus()
  }
}

function closeGoodModal() {
  goodModalOpen.value = false
  if (goodModalTrigger.value) {
    goodModalTrigger.value.focus()
  }
}

function confirmGoodModal() {
  alert(t('pages.keyboardNavigation.modalTrap.modal.content'))
  closeGoodModal()
}

function handleGoodModalTab(event) {
  // Prevent default tab behavior to trap focus
  event.preventDefault()

  // Get all focusable elements in the modal
  const focusableElements = [
    goodModalCloseButton.value,
    goodModalFirstInput.value,
    goodModalCancelButton.value,
    goodModalLastButton.value
  ].filter(el => el !== null)

  if (focusableElements.length === 0) return

  const currentIndex = focusableElements.findIndex(el => el === document.activeElement)

  if (event.shiftKey) {
    // Shift + Tab - going backward
    if (currentIndex <= 0) {
      // Wrap to last element
      focusableElements[focusableElements.length - 1]?.focus()
    } else {
      // Move to previous element
      focusableElements[currentIndex - 1]?.focus()
    }
  } else {
    // Tab - going forward
    if (currentIndex === -1 || currentIndex >= focusableElements.length - 1) {
      // Wrap to first element
      focusableElements[0]?.focus()
    } else {
      // Move to next element
      focusableElements[currentIndex + 1]?.focus()
    }
  }
}

// Menu navigation functions
function selectMenuItem(index) {
  selectedMenuItem.value = index
  alert(`Sélectionné : ${menuItems.value[index]}`)
}

function handleMenuKeydown(event) {
  switch (event.key) {
    case 'ArrowDown':
      event.preventDefault()
      selectedMenuItem.value = (selectedMenuItem.value + 1) % menuItems.value.length
      break
    case 'ArrowUp':
      event.preventDefault()
      selectedMenuItem.value = selectedMenuItem.value === 0 ? menuItems.value.length - 1 : selectedMenuItem.value - 1
      break
    case 'Enter':
    case ' ':
      event.preventDefault()
      selectMenuItem(selectedMenuItem.value)
      break
  }
}

// Computed properties for code examples with translations
const codeExampleListNavigationBad = computed(() => `&lt;!-- ${t('pages.keyboardNavigation.codeExamples.listNavigation.badComment')} --&gt;
&lt;div class="menu"&gt;
  &lt;div tabindex="0"&gt;🏠 ${t('pages.keyboardNavigation.codeExamples.listNavigation.home')}&lt;/div&gt;
  &lt;div tabindex="0"&gt;📋 ${t('pages.keyboardNavigation.codeExamples.listNavigation.projects')}&lt;/div&gt;
  &lt;div tabindex="0"&gt;👥 ${t('pages.keyboardNavigation.codeExamples.listNavigation.team')}&lt;/div&gt;
  &lt;div tabindex="0"&gt;📊 ${t('pages.keyboardNavigation.codeExamples.listNavigation.stats')}&lt;/div&gt;
  &lt;div tabindex="0"&gt;⚙️ ${t('pages.keyboardNavigation.codeExamples.listNavigation.settings')}&lt;/div&gt;
&lt;/div&gt;

&lt;!-- ${t('pages.keyboardNavigation.codeExamples.listNavigation.userMustTab5Times')} --&gt;
&lt;!-- ${t('pages.keyboardNavigation.codeExamples.listNavigation.noArrowNavigation')} --&gt;
&lt;!-- ${t('pages.keyboardNavigation.codeExamples.listNavigation.noMenuSemantics')} --&gt;`)

const codeExampleListNavigationGoodHTML = computed(() => `&lt;!-- ${t('pages.keyboardNavigation.codeExamples.listNavigation.goodComment')} --&gt;
&lt;div
  role="menu"
  @keydown="handleKeydown"
&gt;
  &lt;div
    v-for="(item, i) in items"
    role="menuitem"
    :tabindex="selected === i ? 0 : -1"
    @focus="selected = i"
    :class="{ selected: selected === i }"
  &gt;
    {{ '{' + '{ item }' + '}' }}
  &lt;/div&gt;
&lt;/div&gt;`)

const codeExampleListNavigationGoodJS = computed(() => `// ${t('pages.keyboardNavigation.codeExamples.listNavigation.arrowNavigationComment')}
function handleKeydown(e) {
  switch(e.key) {
    case 'ArrowDown':
      selected = (selected + 1) % items.length
      break
    case 'ArrowUp':
      selected = selected === 0 ? items.length - 1 : selected - 1
      break
    case 'Enter':
      selectItem(selected)
      break
  }
}`)

const codeExampleFocusIndicatorsBadCSS = computed(() => `/* ❌ ${t('pages.keyboardNavigation.codeExamples.focusIndicators.removeFocusComment')} */
*:focus {
  outline: none !important;
}

button:focus, a:focus, input:focus {
  outline: none !important;
}`)

const codeExampleFocusIndicatorsBadHTML = computed(() => `&lt;!-- ❌ ${t('pages.keyboardNavigation.codeExamples.focusIndicators.accessibilityProblems')} --&gt;
&lt;button&gt;${t('pages.keyboardNavigation.codeExamples.focusIndicators.button1')}&lt;/button&gt; &lt;!-- ${t('pages.keyboardNavigation.codeExamples.focusIndicators.button1NoType')} --&gt;
&lt;button&gt;${t('pages.keyboardNavigation.codeExamples.focusIndicators.button2')}&lt;/button&gt; &lt;!-- ${t('pages.keyboardNavigation.codeExamples.focusIndicators.button2NoType')} --&gt;
&lt;a href="#"&gt;${t('pages.keyboardNavigation.codeExamples.focusIndicators.link')}&lt;/a&gt; &lt;!-- ${t('pages.keyboardNavigation.codeExamples.focusIndicators.linkNoFocus')} --&gt;
&lt;input type="text" /&gt; &lt;!-- ${t('pages.keyboardNavigation.codeExamples.focusIndicators.inputNoFocus')} --&gt;
&lt;!-- ${t('pages.keyboardNavigation.codeExamples.focusIndicators.keyboardNavigationNotVisible')} --&gt;`)

const codeExampleFocusIndicatorsGoodCSS = computed(() => `/* ✅ ${t('pages.keyboardNavigation.codeExamples.focusIndicators.visibleFocusComment')} */
button:focus-visible {
  outline: 3px solid #4F46E5;
  outline-offset: 2px;
}

input:focus-visible {
  border-color: #4F46E5;
  outline: 2px solid #4F46E5;
  outline-offset: 1px;
}`)

const codeExampleFocusIndicatorsGoodHTML = computed(() => `&lt;button type="button"&gt;${t('pages.keyboardNavigation.codeExamples.focusIndicators.button1')}&lt;/button&gt;
&lt;button type="button"&gt;${t('pages.keyboardNavigation.codeExamples.focusIndicators.button2')}&lt;/button&gt;
&lt;a href="#"&gt;Lien vers la page&lt;/a&gt;
&lt;input type="text" placeholder="Saisissez du texte" /&gt;`)

const codeExampleSkipLinksBad = computed(() => `&lt;!-- ${t('pages.keyboardNavigation.codeExamples.skipLinks.badComment')} --&gt;
&lt;header&gt;
  &lt;nav&gt;
    &lt;a href="#"&gt;${t('pages.keyboardNavigation.codeExamples.skipLinks.home')}&lt;/a&gt;
    &lt;a href="#"&gt;${t('pages.keyboardNavigation.codeExamples.skipLinks.products')}&lt;/a&gt;
    &lt;a href="#"&gt;${t('pages.keyboardNavigation.codeExamples.skipLinks.services')}&lt;/a&gt;
    &lt;!-- ${t('pages.keyboardNavigation.codeExamples.skipLinks.tenPlusLinks')} --&gt;
  &lt;/nav&gt;
&lt;/header&gt;
&lt;main&gt;
  &lt;!-- ${t('pages.keyboardNavigation.codeExamples.skipLinks.userMustTraverse')} --&gt;
  &lt;h1&gt;${t('pages.keyboardNavigation.codeExamples.skipLinks.mainContent')}&lt;/h1&gt;
&lt;/main&gt;`)

const codeExampleSkipLinksGoodCSS = computed(() => `/* ${t('pages.keyboardNavigation.codeExamples.skipLinks.skipLinkComment')} */
.skip-link {
  position: absolute;
  top: -100px;
  left: 1rem;
  z-index: 1000;
  padding: 0.5rem 1rem;
  background: var(--color-primary);
  color: white;
  text-decoration: none;
  border-radius: 0.625rem;
}

.skip-link:focus {
  top: 1rem;
}`)

const codeExampleSkipLinksGoodHTML = computed(() => `&lt;a href="#main-content" class="skip-link"&gt;
  ${t('pages.keyboardNavigation.codeExamples.skipLinks.skipToContent')}
&lt;/a&gt;

&lt;header&gt;
  &lt;nav aria-label="Navigation principale"&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="/"&gt;${t('pages.keyboardNavigation.codeExamples.skipLinks.home')}&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="/produits"&gt;${t('pages.keyboardNavigation.codeExamples.skipLinks.products')}&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="/services"&gt;${t('pages.keyboardNavigation.codeExamples.skipLinks.services')}&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/nav&gt;
&lt;/header&gt;

&lt;main id="main-content"&gt;
  &lt;h1&gt;${t('pages.keyboardNavigation.codeExamples.skipLinks.mainContent')}&lt;/h1&gt;
&lt;/main&gt;`)

const codeExampleModalTrapBad = computed(() => `&lt;!-- ${t('pages.keyboardNavigation.codeExamples.modalTrap.badComment')} --&gt;
&lt;div v-if="modalOpen" class="modal-overlay" @click="close"&gt;
  &lt;div class="modal-content" @click.stop&gt;
    &lt;div class="modal-header"&gt;
      &lt;h3&gt;${t('pages.keyboardNavigation.codeExamples.modalTrap.confirmAction')}&lt;/h3&gt;
      &lt;button @click="close"&gt;×&lt;/button&gt;
    &lt;/div&gt;

    &lt;div class="modal-body"&gt;
      &lt;p&gt;${t('pages.keyboardNavigation.codeExamples.modalTrap.areYouSure')}&lt;/p&gt;
      &lt;input type="text" placeholder="${t('pages.keyboardNavigation.codeExamples.modalTrap.reasonOptional')}" /&gt;
    &lt;/div&gt;

    &lt;div class="modal-footer"&gt;
      &lt;button @click="close"&gt;${t('pages.keyboardNavigation.codeExamples.modalTrap.cancel')}&lt;/button&gt;
      &lt;button @click="confirm"&gt;${t('pages.keyboardNavigation.codeExamples.modalTrap.confirm')}&lt;/button&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;`)

const codeExampleModalTrapGood = computed(() => `&lt;!-- ${t('pages.keyboardNavigation.codeExamples.modalTrap.goodComment')} --&gt;
&lt;div
  v-if="modalOpen"
  class="modal-overlay"
  @click="closeModal"
  @keydown.esc="closeModal"
&gt;
  &lt;div
    class="modal-content"
    role="dialog"
    aria-modal="true"
    aria-labelledby="modal-title"
    @click.stop
  &gt;
    &lt;header class="modal-header"&gt;
      &lt;h2 id="modal-title"&gt;${t('pages.keyboardNavigation.codeExamples.modalTrap.confirmAction')}&lt;/h2&gt;
      &lt;button
        type="button"
        @click="closeModal"
        aria-label="${t('pages.keyboardNavigation.codeExamples.modalTrap.closeModal')}"
        class="close-btn"
      &gt;×&lt;/button&gt;
    &lt;/header&gt;

    &lt;div class="modal-body"&gt;
      &lt;p&gt;${t('pages.keyboardNavigation.codeExamples.modalTrap.areYouSure')}&lt;/p&gt;
      &lt;input
        ref="firstInput"
        type="text"
        placeholder="${t('pages.keyboardNavigation.codeExamples.modalTrap.reasonOptional')}"
        @keydown.tab="handleFocusTrap"
      /&gt;
    &lt;/div&gt;

    &lt;footer class="modal-footer"&gt;
      &lt;button
        type="button"
        @click="closeModal"
        @keydown.tab="handleFocusTrap"
      &gt;${t('pages.keyboardNavigation.codeExamples.modalTrap.cancel')}&lt;/button&gt;
      &lt;button
        type="button"
        ref="lastButton"
        @click="confirmAction"
        @keydown.tab="handleFocusTrap"
      &gt;${t('pages.keyboardNavigation.codeExamples.modalTrap.confirm')}&lt;/button&gt;
    &lt;/footer&gt;
  &lt;/div&gt;
&lt;/div&gt;`)

const codeExampleModalTrapGoodJS = computed(() => `// ${t('pages.keyboardNavigation.codeExamples.modalTrap.focusTrapComment')} :
// - Focus automatique sur premier élément
// - Piège à focus (Tab/Shift+Tab)
// - Fermeture par Échap
// - Retour du focus à l'élément déclencheur

function handleFocusTrap(event) {
  const focusableElements = modalContent.querySelectorAll(
    'button, input, [tabindex]:not([tabindex="-1"])'
  )
  const firstElement = focusableElements[0]
  const lastElement = focusableElements[focusableElements.length - 1]

  if (event.shiftKey && document.activeElement === firstElement) {
    event.preventDefault()
    lastElement.focus()
  } else if (!event.shiftKey && document.activeElement === lastElement) {
    event.preventDefault()
    firstElement.focus()
  }
}`)
</script>

<template>
  <div class="keyboard-navigation">
    <PageHeader
      :title="$t('pages.keyboardNavigation.title')"
      :description="$t('pages.keyboardNavigation.description')"
    />

    <section aria-labelledby="keyboard-shortcuts-title">
      <h2 id="keyboard-shortcuts-title">{{ $t('pages.keyboardNavigation.shortcuts.title') }}</h2>
      <dl class="shortcuts-list">
        <div>
          <dt><kbd>Tab</kbd></dt>
          <dd>{{ $t('pages.keyboardNavigation.shortcuts.tab') }}</dd>
        </div>
        <div>
          <dt><kbd>Shift + Tab</kbd></dt>
          <dd>{{ $t('pages.keyboardNavigation.shortcuts.shiftTab') }}</dd>
        </div>
        <div>
          <dt><kbd>Entrée</kbd> / <kbd>Espace</kbd></dt>
          <dd>{{ $t('pages.keyboardNavigation.shortcuts.enter') }}</dd>
        </div>
        <div>
          <dt><kbd>Échap</kbd></dt>
          <dd>{{ $t('pages.keyboardNavigation.shortcuts.escape') }}</dd>
        </div>
        <div>
          <dt><kbd>↑ ↓</kbd></dt>
          <dd>{{ $t('pages.keyboardNavigation.shortcuts.arrows') }}</dd>
        </div>
      </dl>
    </section>

    <ExampleToggle
      :title="$t('pages.keyboardNavigation.listNavigation.title')"
      :explanation="$t('pages.keyboardNavigation.listNavigation.explanation')"
    >
      <template #bad>
        <div class="list-nav-demo">
          <p>{{ $t('pages.keyboardNavigation.listNavigation.bad.intro') }}</p>
          <div class="menu-bad">
            <div class="menu-item-bad" tabindex="0">🏠 {{ $t('pages.keyboardNavigation.listNavigation.bad.items.home') }}</div>
            <div class="menu-item-bad" tabindex="0">📋 {{ $t('pages.keyboardNavigation.listNavigation.bad.items.projects') }}</div>
            <div class="menu-item-bad" tabindex="0">👥 {{ $t('pages.keyboardNavigation.listNavigation.bad.items.team') }}</div>
            <div class="menu-item-bad" tabindex="0">📊 {{ $t('pages.keyboardNavigation.listNavigation.bad.items.stats') }}</div>
            <div class="menu-item-bad" tabindex="0">⚙️ {{ $t('pages.keyboardNavigation.listNavigation.bad.items.settings') }}</div>
          </div>
          <div class="code-block">
            <pre><code v-html="codeExampleListNavigationBad"></code></pre>
          </div>
        </div>
      </template>

      <template #good>
        <div class="list-nav-demo">
          <p>{{ $t('pages.keyboardNavigation.listNavigation.good.intro') }}</p>
          <div
            class="menu-good"
            role="menu"
            @keydown="handleMenuKeydown"
          >
            <div
              v-for="(item, index) in menuItems"
              :key="index"
              class="menu-item-good"
              role="menuitem"
              :tabindex="selectedMenuItem === index ? 0 : -1"
              @click="selectMenuItem(index)"
              @focus="selectedMenuItem = index"
              :class="{ selected: selectedMenuItem === index }"
            >
              {{ item }}
            </div>
          </div>
          <p class="hint">💡 {{ $t('pages.keyboardNavigation.listNavigation.good.hint') }}</p>
          <div class="code-block">
            <pre><code>&lt;!-- {{ $t('pages.keyboardNavigation.codeExamples.listNavigation.goodComment') }} --&gt;
&lt;div
  role="menu"
  @keydown="handleKeydown"
&gt;
  &lt;div
    v-for="(item, i) in items"
    role="menuitem"
    :tabindex="selected === i ? 0 : -1"
    @focus="selected = i"
    :class="{ selected: selected === i }"
  &gt;
    {{ '{' + '{ item }' + '}' }}
  &lt;/div&gt;
&lt;/div&gt;</code></pre>
          </div>

          <div class="code-block language-javascript">
            <pre><code>// {{ $t('pages.keyboardNavigation.codeExamples.listNavigation.arrowNavigationComment') }}
function handleKeydown(e) {
  switch(e.key) {
    case 'ArrowDown':
      selected = (selected + 1) % items.length
      break
    case 'ArrowUp':
      selected = selected === 0
        ? items.length - 1
        : selected - 1
      break
    case 'Enter':
      selectItem(selected)
      break
  }
}</code></pre>
          </div>
        </div>
      </template>
    </ExampleToggle>

    <ExampleToggle
      :title="$t('pages.keyboardNavigation.focusStyles.title')"
      :explanation="$t('pages.keyboardNavigation.focusStyles.explanation')"
    >
      <template #bad>
        <div class="focus-demo">
          <p>{{ $t('pages.keyboardNavigation.focusStyles.intro') }}</p>
          <div class="controls-bad">
            <button type="button" class="btn-no-focus">{{ $t('pages.keyboardNavigation.focusStyles.button1') }}</button>
            <button type="button" class="btn-no-focus">{{ $t('pages.keyboardNavigation.focusStyles.button2') }}</button>
            <a href="#" class="link-no-focus">{{ $t('pages.keyboardNavigation.focusStyles.link') }}</a>
            <input type="text" class="input-no-focus" :placeholder="$t('pages.keyboardNavigation.focusStyles.input')" />
            <button type="button" class="btn-no-focus">{{ $t('pages.keyboardNavigation.focusStyles.submit') }}</button>
          </div>
          <div class="code-block language-css">
            <pre><code>/* ❌ {{ $t('pages.keyboardNavigation.codeExamples.focusIndicators.removeFocusComment') }} */
*:focus {
  outline: none !important;
}

button:focus,
a:focus,
input:focus {
  outline: none !important;
}</code></pre>
          </div>

          <div class="code-block">
            <pre><code>&lt;!-- {{ $t('pages.keyboardNavigation.codeExamples.focusIndicators.accessibilityProblems') }} --&gt;
&lt;button&gt;{{ $t('pages.keyboardNavigation.codeExamples.focusIndicators.button1') }}&lt;/button&gt;        &lt;!-- {{ $t('pages.keyboardNavigation.codeExamples.focusIndicators.button1NoType') }} --&gt;
&lt;button&gt;{{ $t('pages.keyboardNavigation.codeExamples.focusIndicators.button2') }}&lt;/button&gt;        &lt;!-- {{ $t('pages.keyboardNavigation.codeExamples.focusIndicators.button2NoType') }} --&gt;
&lt;a href="#"&gt;{{ $t('pages.keyboardNavigation.codeExamples.focusIndicators.link') }}&lt;/a&gt;           &lt;!-- {{ $t('pages.keyboardNavigation.codeExamples.focusIndicators.linkNoFocus') }} --&gt;
&lt;input type="text" /&gt;         &lt;!-- {{ $t('pages.keyboardNavigation.codeExamples.focusIndicators.inputNoFocus') }} --&gt;

&lt;!-- {{ $t('pages.keyboardNavigation.codeExamples.focusIndicators.keyboardNavigationNotVisible') }} --&gt;</code></pre>
          </div>
        </div>
      </template>

      <template #good>
        <div class="focus-demo">
          <p>{{ $t('pages.keyboardNavigation.focusStyles.intro') }}</p>
          <div class="controls-good">
            <button type="button" class="btn-good-focus">{{ $t('pages.keyboardNavigation.focusStyles.button1') }}</button>
            <button type="button" class="btn-good-focus">{{ $t('pages.keyboardNavigation.focusStyles.button2') }}</button>
            <a href="#" class="link-good-focus">{{ $t('pages.keyboardNavigation.focusStyles.link') }}</a>
            <input type="text" class="input-good-focus" :placeholder="$t('pages.keyboardNavigation.focusStyles.input')" />
            <button type="button" class="btn-good-focus">{{ $t('pages.keyboardNavigation.focusStyles.submit') }}</button>
          </div>
          <div class="code-block language-css">
            <pre><code>/* ✅ {{ $t('pages.keyboardNavigation.codeExamples.focusIndicators.visibleFocusComment') }} */
button:focus-visible {
  outline: 3px solid #4F46E5;
  outline-offset: 2px;
}

input:focus-visible {
  border-color: #4F46E5;
  outline: 2px solid #4F46E5;
  outline-offset: 1px;
}</code></pre>
          </div>

          <div class="code-block">
            <pre><code>&lt;button type="button"&gt;{{ $t('pages.keyboardNavigation.codeExamples.focusIndicators.button1') }}&lt;/button&gt;
&lt;button type="button"&gt;{{ $t('pages.keyboardNavigation.codeExamples.focusIndicators.button2') }}&lt;/button&gt;
&lt;a href="#"&gt;{{ $t('pages.keyboardNavigation.focusStyles.link') }}&lt;/a&gt;
&lt;input type="text" placeholder="{{ $t('pages.keyboardNavigation.focusStyles.input') }}" /&gt;</code></pre>
          </div>
        </div>
      </template>
    </ExampleToggle>

    <ExampleToggle
      :title="$t('pages.keyboardNavigation.skipLink.title')"
      :explanation="$t('pages.keyboardNavigation.skipLink.explanation')"
    >
      <template #bad>
        <div class="skip-demo">
          <div class="demo-page-bad">
            <div class="demo-header">
              <div class="demo-logo">{{ $t('pages.keyboardNavigation.skipLink.bad.logo') }}</div>
              <div class="demo-nav">
                <a href="#">{{ $t('pages.keyboardNavigation.skipLink.bad.nav.home') }}</a>
                <a href="#">{{ $t('pages.keyboardNavigation.skipLink.bad.nav.products') }}</a>
                <a href="#">{{ $t('pages.keyboardNavigation.skipLink.bad.nav.services') }}</a>
                <a href="#">{{ $t('pages.keyboardNavigation.skipLink.bad.nav.about') }}</a>
                <a href="#">{{ $t('pages.keyboardNavigation.skipLink.bad.nav.blog') }}</a>
                <a href="#">{{ $t('pages.keyboardNavigation.skipLink.bad.nav.contact') }}</a>
                <a href="#">{{ $t('pages.keyboardNavigation.skipLink.bad.nav.support') }}</a>
                <a href="#">{{ $t('pages.keyboardNavigation.skipLink.bad.nav.account') }}</a>
              </div>
            </div>
            <div class="demo-main" id="main-content-bad">
              <h2>{{ $t('pages.keyboardNavigation.skipLink.bad.content.heading') }}</h2>
              <p>{{ $t('pages.keyboardNavigation.skipLink.bad.content.description') }}</p>
            </div>
          </div>
          <div class="code-block">
            <pre><code>&lt;!-- {{ $t('pages.keyboardNavigation.codeExamples.skipLinks.badComment') }} --&gt;
&lt;header&gt;
  &lt;nav&gt;
    &lt;a href="#"&gt;{{ $t('pages.keyboardNavigation.codeExamples.skipLinks.home') }}&lt;/a&gt;
    &lt;a href="#"&gt;{{ $t('pages.keyboardNavigation.codeExamples.skipLinks.products') }}&lt;/a&gt;
    &lt;a href="#"&gt;{{ $t('pages.keyboardNavigation.codeExamples.skipLinks.services') }}&lt;/a&gt;
    &lt;!-- {{ $t('pages.keyboardNavigation.codeExamples.skipLinks.tenPlusLinks') }} --&gt;
  &lt;/nav&gt;
&lt;/header&gt;
&lt;main&gt;
  &lt;!-- {{ $t('pages.keyboardNavigation.codeExamples.skipLinks.userMustTraverse') }} --&gt;
  &lt;h1&gt;{{ $t('pages.keyboardNavigation.codeExamples.skipLinks.mainContent') }}&lt;/h1&gt;
&lt;/main&gt;</code></pre>
          </div>
        </div>
      </template>

      <template #good>
        <div class="skip-demo">
          <div class="demo-page-good">
            <a href="#main-content-good" class="skip-link">{{ $t('pages.keyboardNavigation.skipLink.skip') }}</a>
            <div class="demo-header">
              <div class="demo-logo">{{ $t('pages.keyboardNavigation.skipLink.bad.logo') }}</div>
              <div class="demo-nav">
                <a href="#">{{ $t('pages.keyboardNavigation.skipLink.bad.nav.home') }}</a>
                <a href="#">{{ $t('pages.keyboardNavigation.skipLink.bad.nav.products') }}</a>
                <a href="#">{{ $t('pages.keyboardNavigation.skipLink.bad.nav.services') }}</a>
                <a href="#">{{ $t('pages.keyboardNavigation.skipLink.bad.nav.about') }}</a>
                <a href="#">{{ $t('pages.keyboardNavigation.skipLink.bad.nav.blog') }}</a>
                <a href="#">{{ $t('pages.keyboardNavigation.skipLink.bad.nav.contact') }}</a>
                <a href="#">{{ $t('pages.keyboardNavigation.skipLink.bad.nav.support') }}</a>
                <a href="#">{{ $t('pages.keyboardNavigation.skipLink.bad.nav.account') }}</a>
              </div>
            </div>
            <div class="demo-main" id="main-content-good">
              <h2>{{ $t('pages.keyboardNavigation.skipLink.good.content.heading') }}</h2>
              <p>{{ $t('pages.keyboardNavigation.skipLink.good.content.description') }}</p>
            </div>
          </div>
          <div class="code-block language-css">
            <pre><code>/* {{ $t('pages.keyboardNavigation.codeExamples.skipLinks.skipLinkComment') }} */
.skip-link {
  position: absolute;
  top: -100px;
  left: 1rem;
  z-index: 1000;
  padding: 0.5rem 1rem;
  background: var(--color-primary);
  color: white;
  text-decoration: none;
  border-radius: 0.625rem;
}

.skip-link:focus {
  top: 1rem;
}</code></pre>
          </div>

          <div class="code-block">
            <pre><code>&lt;a href="#main-content" class="skip-link"&gt;
  {{ $t('pages.keyboardNavigation.codeExamples.skipLinks.skipToContent') }}
&lt;/a&gt;
&lt;header&gt;
  &lt;nav aria-label="{{ $t('navigation.ariaLabel') }}"&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="/"&gt;{{ $t('pages.keyboardNavigation.codeExamples.skipLinks.home') }}&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="/produits"&gt;{{ $t('pages.keyboardNavigation.codeExamples.skipLinks.products') }}&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="/services"&gt;{{ $t('pages.keyboardNavigation.codeExamples.skipLinks.services') }}&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/nav&gt;
&lt;/header&gt;
&lt;main id="main-content"&gt;
  &lt;h1&gt;{{ $t('pages.keyboardNavigation.codeExamples.skipLinks.mainContent') }}&lt;/h1&gt;
&lt;/main&gt;</code></pre>
          </div>
        </div>
      </template>
    </ExampleToggle>

    <ExampleToggle
      :title="$t('pages.keyboardNavigation.modalTrap.title')"
      :explanation="$t('pages.keyboardNavigation.modalTrap.explanation')"
    >
      <template #bad>
        <div class="modal-demo">
          <button type="button" @click="openBadModal" class="open-modal-btn">
            {{ $t('pages.keyboardNavigation.modalTrap.openBad') }}
          </button>

          <div v-if="badModalOpen" class="modal-overlay-bad" @click="closeBadModal">
            <div class="modal-content-bad" @click.stop>
              <div class="modal-header">
                <h3>{{ $t('pages.keyboardNavigation.modalTrap.modal.title') }}</h3>
                <button type="button" @click="closeBadModal" class="close-btn">×</button>
              </div>
              <div class="modal-body">
                <p>{{ $t('pages.keyboardNavigation.modalTrap.modal.content') }}</p>
                <input type="text" :placeholder="$t('pages.keyboardNavigation.modalTrap.modal.reason')" />
              </div>
              <div class="modal-footer">
                <button type="button" @click="closeBadModal">{{ $t('pages.keyboardNavigation.modalTrap.modal.cancel') }}</button>
                <button type="button" @click="confirmBadModal">{{ $t('pages.keyboardNavigation.modalTrap.modal.confirm') }}</button>
              </div>
            </div>
          </div>
          <div class="code-block">
            <pre><code>&lt;!-- {{ $t('pages.keyboardNavigation.codeExamples.modalTrap.badComment') }} --&gt;
&lt;div v-if="modalOpen" class="modal-overlay" @click="close"&gt;
  &lt;div class="modal-content" @click.stop&gt;
    &lt;div class="modal-header"&gt;
      &lt;h3&gt;{{ $t('pages.keyboardNavigation.codeExamples.modalTrap.confirmAction') }}&lt;/h3&gt;
      &lt;button @click="close"&gt;×&lt;/button&gt;
    &lt;/div&gt;
    &lt;div class="modal-body"&gt;
      &lt;p&gt;{{ $t('pages.keyboardNavigation.codeExamples.modalTrap.areYouSure') }}&lt;/p&gt;
      &lt;input type="text" placeholder="{{ $t('pages.keyboardNavigation.modalTrap.modal.reason') }}" /&gt;
    &lt;/div&gt;
    &lt;div class="modal-footer"&gt;
      &lt;button @click="close"&gt;{{ $t('pages.keyboardNavigation.codeExamples.modalTrap.cancel') }}&lt;/button&gt;
      &lt;button @click="confirm"&gt;{{ $t('pages.keyboardNavigation.codeExamples.modalTrap.confirm') }}&lt;/button&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;</code></pre>
          </div>
        </div>
      </template>

      <template #good>
        <div class="modal-demo">
          <button type="button" @click="openGoodModal" class="open-modal-btn" ref="goodModalTrigger">
            {{ $t('pages.keyboardNavigation.modalTrap.openGood') }}
          </button>

          <div
            v-if="goodModalOpen"
            class="modal-overlay-good"
            @click="closeGoodModal"
            @keydown.esc="closeGoodModal"
            @keydown.tab="handleGoodModalTab"
            role="dialog"
            aria-modal="true"
            aria-labelledby="good-modal-title"
          >
            <div class="modal-content-good" @click.stop>
              <div class="modal-header">
                <h3 id="good-modal-title">{{ $t('pages.keyboardNavigation.modalTrap.modal.title') }}</h3>
                <button
                  type="button"
                  @click="closeGoodModal"
                  ref="goodModalCloseButton"
                  class="close-btn-good"
                  :aria-label="$t('pages.keyboardNavigation.modalTrap.modal.closeLabel')"
                >×</button>
              </div>
              <div class="modal-body">
                <p>{{ $t('pages.keyboardNavigation.modalTrap.modal.content') }}</p>
                <input
                  type="text"
                  :placeholder="$t('pages.keyboardNavigation.modalTrap.modal.reason')"
                  ref="goodModalFirstInput"
                />
              </div>
              <div class="modal-footer">
                <button
                  type="button"
                  @click="closeGoodModal"
                  ref="goodModalCancelButton"
                  class="btn-cancel"
                >{{ $t('pages.keyboardNavigation.modalTrap.modal.cancel') }}</button>
                <button
                  type="button"
                  @click="confirmGoodModal"
                  ref="goodModalLastButton"
                  class="btn-confirm"
                >
                  {{ $t('pages.keyboardNavigation.modalTrap.modal.confirm') }}
                </button>
              </div>
            </div>
          </div>
          <div class="code-block">
            <pre><code>&lt;!-- {{ $t('pages.keyboardNavigation.codeExamples.modalTrap.goodComment') }} --&gt;
&lt;div
  v-if="modalOpen"
  class="modal-overlay"
  @click="closeModal"
  @keydown.esc="closeModal"
&gt;
  &lt;div
    class="modal-content"
    role="dialog"
    aria-modal="true"
    aria-labelledby="modal-title"
    @click.stop
  &gt;
    &lt;header class="modal-header"&gt;
      &lt;h2 id="modal-title"&gt;{{ $t('pages.keyboardNavigation.codeExamples.modalTrap.confirmAction') }}&lt;/h2&gt;
      &lt;button
        type="button"
        @click="closeModal"
        aria-label="{{ $t('pages.keyboardNavigation.codeExamples.modalTrap.closeModal') }}"
        class="close-btn"
      &gt;×&lt;/button&gt;
    &lt;/header&gt;

    &lt;div class="modal-body"&gt;
      &lt;p&gt;{{ $t('pages.keyboardNavigation.codeExamples.modalTrap.areYouSure') }}&lt;/p&gt;
      &lt;input
        ref="firstInput"
        type="text"
        placeholder="{{ $t('pages.keyboardNavigation.codeExamples.modalTrap.reasonOptional') }}"
        @keydown.tab="handleFocusTrap"
      /&gt;
    &lt;/div&gt;

    &lt;footer class="modal-footer"&gt;
      &lt;button
        type="button"
        @click="closeModal"
        @keydown.tab="handleFocusTrap"
      &gt;{{ $t('pages.keyboardNavigation.codeExamples.modalTrap.cancel') }}&lt;/button&gt;
      &lt;button
        type="button"
        ref="lastButton"
        @click="confirmAction"
        @keydown.tab="handleFocusTrap"
      &gt;{{ $t('pages.keyboardNavigation.codeExamples.modalTrap.confirm') }}&lt;/button&gt;
    &lt;/footer&gt;
  &lt;/div&gt;
&lt;/div&gt;</code></pre>
          </div>

          <div class="code-block language-javascript">
            <pre><code>// {{ $t('pages.keyboardNavigation.codeExamples.modalTrap.focusTrapComment') }} :
// - Focus automatique sur premier élément
// - Piège à focus (Tab/Shift+Tab)
// - Fermeture par Échap
// - Retour du focus à l'élément déclencheur

function handleFocusTrap(event) {
  const focusableElements = modalContent.querySelectorAll(
    'button, input, [tabindex]:not([tabindex="-1"])'
  )
  const firstElement = focusableElements[0]
  const lastElement = focusableElements[focusableElements.length - 1]

  if (event.shiftKey && document.activeElement === firstElement) {
    event.preventDefault()
    lastElement.focus()
  } else if (!event.shiftKey && document.activeElement === lastElement) {
    event.preventDefault()
    firstElement.focus()
  }
}</code></pre>
          </div>
        </div>
      </template>
    </ExampleToggle>
  </div>
</template>

<style scoped>
.keyboard-navigation {
  max-width: 100%;
  margin: 0 auto;
}

header {
  text-align: left;
  margin-bottom: 3rem;
}

h1 {
  font-size: 2.5rem;
  color: var(--color-text);
  margin-bottom: 1rem;
}

.lead {
  font-size: 1.25rem;
  color: var(--color-text-secondary);
}

/* Keyboard shortcuts */
.shortcuts-list {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1rem;
  background: var(--color-bg-secondary);
  padding: 1.5rem;
  border-radius: 0.625rem;
  margin-bottom: 2rem;
}

.shortcuts-list div {
  display: flex;
  align-items: baseline;
  gap: 1rem;
}

.shortcuts-list dt {
  flex-shrink: 0;
}

kbd {
  display: inline-block;
  padding: 0.2rem 0.4rem;
  font-size: 0.85rem;
  font-family: monospace;
  background: var(--color-bg);
  color: var(--color-text);
  border: 1px solid var(--color-border);
  border-radius: 0.625rem;
  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.1);
}

/* Focus demo styles */
.focus-demo {
  background: var(--color-bg);
  color: var(--color-text);
  padding: 1.5rem;
  border-radius: 0.625rem;
  border: 1px solid var(--color-border);
}

.controls-bad, .controls-good {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  margin-top: 1rem;
}

/* Bad focus styles */
.btn-no-focus, .link-no-focus {
  padding: 0.75rem 1.5rem;
  background: var(--color-primary);
  color: white;
  border: none;
  border-radius: 0.625rem;
  text-decoration: none;
}

.btn-no-focus:focus, .link-no-focus:focus {
  outline: none !important;
}

.input-no-focus {
  padding: 0.75rem;
  border: 1px solid var(--color-border);
  border-radius: 0.625rem;
}

.input-no-focus:focus {
  outline: none !important;
}

/* Good focus styles */
.btn-good-focus, .link-good-focus {
  padding: 0.75rem 1.5rem;
  background: var(--color-primary);
  color: white;
  border: none;
  border-radius: 0.625rem;
  text-decoration: none;
}

.btn-good-focus:focus-visible, .link-good-focus:focus-visible {
  outline: 3px solid var(--color-focus);
  outline-offset: 2px;
}

.input-good-focus {
  padding: 0.75rem;
  border: 2px solid var(--color-border);
  border-radius: 0.625rem;
}

.input-good-focus:focus-visible {
  border-color: var(--color-primary);
  outline: 2px solid var(--color-focus);
  outline-offset: 1px;
}

/* Skip link demo styles */
.skip-demo {
  background: var(--color-bg);
  color: var(--color-text);
  border-radius: 0.625rem;
  border: 1px solid var(--color-border);
  overflow: hidden;
}

.demo-page-bad, .demo-page-good {
  position: relative;
}

.skip-link {
  position: absolute;
  top: -100px;
  left: 1rem;
  z-index: 1000;
  padding: 0.5rem 1rem;
  background: var(--color-primary);
  color: white;
  text-decoration: none;
  border-radius: 0.625rem;
  transition: top 0.2s;
}

.skip-link:focus {
  top: 1rem;
}

.demo-header {
  background: var(--color-bg-secondary);
  padding: 1rem;
  border-bottom: 1px solid var(--color-border);
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
}

.demo-logo {
  font-weight: bold;
  font-size: 1.25rem;
}

.demo-nav {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
}

.demo-nav a {
  padding: 0.5rem;
  text-decoration: none;
  color: var(--color-primary);
  border-radius: 0.625rem;
}

.demo-nav a:hover {
  background: var(--color-primary-light);
}

.demo-main {
  padding: 1.5rem;
}

/* Modal styles */
.modal-demo {
  position: relative;
}

.open-modal-btn {
  padding: 0.75rem 1.5rem;
  background: var(--color-primary);
  color: white;
  border: none;
  border-radius: 0.625rem;
  cursor: pointer;
}

.modal-overlay-bad, .modal-overlay-good {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

.modal-content-bad, .modal-content-good {
  background: var(--color-bg);
  color: var(--color-text);
  border-radius: 0.625rem;
  max-width: 500px;
  width: 90%;
  max-height: 90vh;
  overflow: auto;
}

.modal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1.5rem 1.5rem 0;
}

.modal-header h3 {
  margin: 0;
}

.close-btn {
  background: none;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  padding: 0.25rem;
  border-radius: 0.625rem;
}

.close-btn:focus-visible {
  outline: 2px solid var(--color-focus);
}

.close-btn-good {
  background: none;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  padding: 0.25rem;
  border-radius: 0.625rem;
  color: var(--color-text);
}

.close-btn-good:hover {
  background: var(--color-bg-secondary);
}

.close-btn-good:focus-visible {
  outline: 2px solid var(--color-focus);
}

.modal-body {
  padding: 1.5rem;
}

.modal-body input {
  width: 100%;
  padding: 0.75rem;
  border: 1px solid var(--color-border);
  border-radius: 0.625rem;
  margin-top: 1rem;
}

.modal-footer {
  display: flex;
  gap: 1rem;
  justify-content: flex-end;
  padding: 0 1.5rem 1.5rem;
}

.modal-footer button {
  padding: 0.75rem 1.5rem;
  border: 1px solid var(--color-border);
  border-radius: 0.625rem;
  cursor: pointer;
}

.modal-footer button:last-child {
  background: var(--color-primary);
  color: white;
  border-color: var(--color-primary);
}

/* Boutons spécifiques pour le bon exemple */
.btn-cancel {
  background: transparent;
  color: var(--color-text);
  border: 2px solid var(--color-border);
}

.btn-cancel:hover {
  background: var(--color-bg-secondary);
  border-color: var(--color-text);
}

.btn-cancel:focus-visible {
  outline: 2px solid var(--color-focus);
  outline-offset: 2px;
}

.btn-confirm {
  background: var(--color-primary);
  color: white;
  border: 2px solid var(--color-primary);
}

.btn-confirm:hover {
  background: var(--color-primary-dark);
  border-color: var(--color-primary-dark);
}

.btn-confirm:focus-visible {
  outline: 2px solid var(--color-focus);
  outline-offset: 2px;
}

/* Menu navigation styles */
.list-nav-demo {
  background: var(--color-bg);
  color: var(--color-text);
  padding: 1.5rem;
  border-radius: 0.625rem;
  border: 1px solid var(--color-border);
}

.menu-bad, .menu-good {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  margin: 1rem 0;
  background: var(--color-bg-secondary);
  border-radius: 0.625rem;
  padding: 0.5rem;
}

.menu-item-bad, .menu-item-good {
  padding: 0.75rem 1rem;
  cursor: pointer;
  border-radius: 0.625rem;
  transition: background-color 0.2s;
}

.menu-item-bad:hover, .menu-item-good:hover {
  background: var(--color-primary-light);
}

.menu-item-bad:focus, .menu-item-good:focus {
  outline: 2px solid var(--color-focus);
  outline-offset: 1px;
}

.menu-item-good.selected {
  background: var(--color-primary);
  color: white;
}

.menu-item-good.selected:hover {
  background: var(--color-primary-dark);
}

.menu-item-good.selected:active {
  background: var(--color-primary-darker);
}

.hint {
  font-size: 0.9rem;
  color: var(--color-text-secondary);
  font-style: italic;
  margin-top: 0.5rem;
}

.code-block {
  background: #1e1e1e;
  color: #e0e0e0;
  border-radius: 0.625rem;
  padding: 1rem;
  margin-top: 1rem;
  overflow-x: auto;
  font-size: 0.875rem;
  line-height: 1.5;
  border: 1px solid var(--color-border);
}

.code-block pre {
  margin: 0;
  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
}

.code-block code {
  white-space: pre;
  word-wrap: normal;
}

@media (prefers-reduced-motion: reduce) {
  .skip-link {
    transition: none;
  }

  .menu-item-bad, .menu-item-good {
    transition: none;
  }
}
</style>
